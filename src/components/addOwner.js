import React from 'react'
import "react-datepicker/dist/react-datepicker.css";
import '../styles/style.scss'
import { Container, Button, Form } from 'react-bootstrap'
import Popup from 'reactjs-popup'
import DatePicker from "react-datepicker"
var moment = require('moment');

class AddOwner extends React.Component {
   constructor() {
      super()
      this.state = {
         addOwnerVisible: false,
         startDate: null
      }
   }

   handleChange = date => {
      this.setState({
         startDate: date
      });
      // –ø—Ä–æ–≤–µ—Ä–æ—á–∫–∞ –Ω–∞ –±—É–¥—É—â—É—é –¥–∞—Ç—É
      let now = moment().format("YYYY-MM-DD");
      let checkDate = moment(date).format("YYYY-MM-DD")
      if (moment(checkDate).isAfter(now)) {
         document.querySelector(".date-error").classList.remove('d-none')
         document.querySelector(".date-error").classList.add('d-block')
      } else {
         document.querySelector(".date-error").classList.remove('d-block')
         document.querySelector(".date-error").classList.add('d-none')
      }
   };

   nameValidate(e){
      console.log(e)
      let valid = /^[a-zA-Z ]+$/.test(e.target.value);
      if (!valid) {
         document.querySelector(".name-error").classList.remove('d-none')
         document.querySelector(".name-error").classList.add('d-block')
      } else {
         document.querySelector(".name-error").classList.remove('d-block')
         document.querySelector(".name-error").classList.add('d-none')
   }
   }

   showAddOwner() {
      this.setState({ addOwnerVisible: true });
   }

   render() {
      return (
         <Container className="d-flex justify-content-end">
            <Popup trigger={<Button>+</Button>} modal on="focus">
               {close => (
               <div className="">
                  <p>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>
                  <Form>

                     <Form.Group controlId="">
                        <Form.Label>–ò–º—è</Form.Label>
                        <Form.Control onChange={this.nameValidate} type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è" />
                        <Form.Text className="name-error d-none">
                           –ò–º—è —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤!
                        </Form.Text>
                     </Form.Group>

                     <Form.Group controlId="">
                        <Form.Label>–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è</Form.Label>
                        <br></br>
                        <DatePicker
                           placeholderText="–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
                           dateFormat="dd.MM.yyyy"
                           selected={this.state.startDate}
                           onChange={this.handleChange}
                        />
                        <Form.Text className="date-error d-none">
                           –¢—ã –Ω–µ –º–æ–∂–µ—à—å —Ä–æ–¥–∏—Ç—å—Å—è –≤ –±—É–¥—É—â–µ–º üò≠
                        </Form.Text>
                     </Form.Group>

                     <Button variant="primary" type="submit">
                        –û–∫
                     </Button>
                     <Button variant="primary" onClick={close}>
                        –û—Ç–º–µ–Ω–∞
                     </Button>

                  </Form>
               </div>
               )}
            </Popup>
         </Container>
      )
   }
}


export default AddOwner